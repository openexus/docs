"use strict";(self.webpackChunkdocusaurus_classic_typescript=self.webpackChunkdocusaurus_classic_typescript||[]).push([[5496],{5607:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>d,toc:()=>o});var i=t(4848),s=t(8453);const r={sidebar_position:4},a="Extends",d={id:"learn/spec/generate/extends",title:"Extends",description:"Extends makes it easy to extend another node. This is similar to inheritence in Object Oriented Programming.",source:"@site/docs/learn/spec/generate/extends.mdx",sourceDirName:"learn/spec/generate",slug:"/learn/spec/generate/extends",permalink:"/docs/learn/spec/generate/extends",draft:!1,unlisted:!1,editUrl:"https://github.com/openexus/docs-source/tree/main/packages/create-docusaurus/templates/shared/docs/learn/spec/generate/extends.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Embed",permalink:"/docs/learn/spec/generate/embed"},next:{title:"Overview",permalink:"/docs/learn/spec/properties/"}},c={},o=[{value:"Minimal Example: Extending Input",id:"minimal-example-extending-input",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"extends",children:"Extends"}),"\n",(0,i.jsx)(n.p,{children:"Extends makes it easy to extend another node. This is similar to inheritence in Object Oriented Programming."}),"\n",(0,i.jsx)(n.h2,{id:"minimal-example-extending-input",children:"Minimal Example: Extending Input"}),"\n",(0,i.jsxs)(n.p,{children:["Let's say we want to create a new module that allows user to enter a numeric zipcodes. Since the UI is very similar to the number input with minimal changes, we can extend ",(0,i.jsx)(n.code,{children:"@buildin/input/number"}),"."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Hide ",(0,i.jsx)(n.code,{children:"((min))"})," and ",(0,i.jsx)(n.code,{children:"((max))"})," properties so that it is not configurable."]}),"\n",(0,i.jsxs)(n.li,{children:["Add a new ",(0,i.jsx)(n.code,{children:"((digits))"})," property so that user can configure how many digits are expected for the zipcode."]}),"\n",(0,i.jsxs)(n.li,{children:["Add additional code to react to changes from ",(0,i.jsx)(n.code,{children:"((digits))"})," and update ",(0,i.jsx)(n.code,{children:"((min))"})," and ",(0,i.jsx)(n.code,{children:"((max))"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yml",metastring:'title="manifest.yaml"',children:"name: US Zipcode Input\ndescription: Input field that only accepts 5 digit number.\ngenerate:\n  type: extends\n  config:\n    extend: @buildin/input/number\nproperties:\n  # You can override any properties from the extended node\n  min:\n    default: 5\n    hidden: true\n  max:\n    default: 5\n    hidden: true\n  # You can also add new properties\n  digits:\n    datatype: number\n    default: 5\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",metastring:'title="src/main.tsx"',children:"context.effect(() => {\n  context.set('min', context.get('digits'));\n  context.set('max', context.get('digits'));\n});\n"})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>d});var i=t(6540);const s={},r=i.createContext(s);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);
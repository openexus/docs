"use strict";(self.webpackChunkdocusaurus_classic_typescript=self.webpackChunkdocusaurus_classic_typescript||[]).push([[385],{8741:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>d,frontMatter:()=>c,metadata:()=>o,toc:()=>l});var r=t(4848),s=t(8453);const c={sidebar_position:1},i="Counter",o={id:"learn/examples/counter",title:"Counter",description:"Render a button that when clicked, increment the value. Features used in this example:",source:"@site/docs/learn/examples/counter.mdx",sourceDirName:"learn/examples",slug:"/learn/examples/counter",permalink:"/docs/learn/examples/counter",draft:!1,unlisted:!1,editUrl:"https://github.com/openexus/docs-source/tree/main/packages/create-docusaurus/templates/shared/docs/learn/examples/counter.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Examples",permalink:"/docs/category/examples"},next:{title:"Multipler",permalink:"/docs/learn/examples/multiplier"}},a={},l=[];function u(e){const n={code:"code",h1:"h1",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"counter",children:"Counter"}),"\n",(0,r.jsx)(n.p,{children:"Render a button that when clicked, increment the value. Features used in this example:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Reading and writing values to properties (",(0,r.jsx)(n.code,{children:"context.get"})," and ",(0,r.jsx)(n.code,{children:"context.set"}),")"]}),"\n",(0,r.jsx)(n.li,{children:"JSX and UI binding"}),"\n",(0,r.jsxs)(n.li,{children:["Event handlers on DOM elements (",(0,r.jsx)(n.code,{children:"on:click"}),")"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yml",metastring:'title="manifest.yaml"',children:"name: Counter\ndescription: Simple counter example!\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yml",metastring:'title="properties.yaml"',children:"ui:\n  datatype: html\ncount:\n  datatype: number\n  default: 1\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",metastring:'title="src/main.jsx"',children:"function increment() {\n  // Increment the value of ((count))\n  context.set('count', context.get('count') + 1);\n}\n\nfunction render() {\n  // Function that returns JSX can bind to \n  // property of datatype `html`\n  return (\n    <button on:click={increment}>\n      Increment {context.get('count')}\n    </button>\n  )\n}\n\n// Bind a function that returns JSX\ncontext.set('ui', render);\n"})})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var r=t(6540);const s={},c=r.createContext(s);function i(e){const n=r.useContext(c);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(c.Provider,{value:n},e.children)}}}]);